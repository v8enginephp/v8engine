function escapeHtml(e) {
    if (null != e) return e.replace(/<!--/g, "").replace(/-->/g, "").replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;").replace(/^\s*/g, "").replace(/\s*$/g, "")
}

!function (e) {
    e.Modiran = new function () {
        var o = document.querySelector(".toggle-sidebar-switch"),
            t = document.querySelector(".creative-sidebar-switch"), n = document.querySelector(".fix-header-switch");
        this.initMetisMenu = function () {
            "undefined" != typeof metisMenu && $("#side-menu").metisMenu()
        }, this.checkOldIE = function () {
            $.browser.msie && $.browser.version < 9 && $("#page-content").prepend('<p class="alert alert-warning">مرورگر شما منسوخ و تاریخ گذشته است. از سایت  <a href="http://browsehappy.com/">browsehappy(مرور شاد اینترنت)</a> ، اقدام به به روز رسانی کنید</p>')
        }, this.toggleSidebarTop = function () {
            $("#toggle-sidebar-top").on("click", function (e) {
                e.preventDefault();
                var o = $(this), t = $(this).find("i");
                o.hasClass("open") ? (o.removeClass("open"), t.removeClass("icon-user-following").addClass("text-danger icon-user-unfollow"), $(".sidebar-top").slideUp()) : (o.addClass("open"), t.removeClass("text-danger icon-user-unfollow").addClass("icon-user-following"), $(".sidebar-top").slideDown())
            })
        }, this.toggleSidebar = function () {
            $("#toggle-sidebar").on("click", function (o) {
                o.preventDefault(), $("body").hasClass("sidebar-collapse") ? e.Modiran.changeSidebarState("expand") : e.Modiran.changeSidebarState("collapse")
            })
        }, this.changeSidebarState = function (t) {
            "collapse" === t ? ($("body").addClass("sidebar-collapse"), $(".metismenu>li").removeClass("active"), $(".metismenu > li > ul").removeClass("in"), o.checked || $(".toggle-sidebar-switch").trigger("click")) : ($("body").removeClass("sidebar-collapse"), o.checked && $(".toggle-sidebar-switch").trigger("click")), e.Modiran.updateSettingCodes()
        }, this.handleStatusButton = function () {
            $(".dropdown-status>li>a").on("click", function () {
                $(".btn-status").html($(this).html())
            })
        }, this.tooltip = function () {
            $("[rel='tooltip'], .has-tooltip").tooltip(), $(".btn-code").tooltip({title: $(this).data("title")})
        }, this.handleCodeButton = function () {
            $(".btn-code").on("click", function (e) {
                e.preventDefault();
                var o = escapeHtml($(this).parent().find(".code-modal").html());
                o = "<pre class='codes'><code id='code-for-copy'>" + o + "</code></pre>", $("#code-modal .modal-body").html(o), $("#code-modal").modal("show")
            })
        }, this.handleCopyCodeButton = function () {
            $("#btn-copy").on("click", function () {
                var o = document.getElementById("code-for-copy"), t = e.getSelection(), n = document.createRange();
                n.selectNodeContents(o), t.removeAllRanges(), t.addRange(n), document.execCommand("copy")
            })
        }, this.popover = function () {
            $("[data-toggle='popover'] .has-popover").popover({
                container: "body",
                html: !0,
                trigger: "click",
                content: function () {
                    return $(this).find(".popover-content").html()
                }
            }).on("shown.bs.popover", function () {
                var e = $(this);
                e.data("bs.popover").tip().find(".close").click(function () {
                    e.popover("hide")
                })
            })
        }, this.dropdownHover = function () {
            $(".dropdown-hover").length && $(".dropdown-hover").dropdownHover()
        }, this.toggleFullScreen = function () {
            "undefined" != typeof screenfull && (screenfull.isEnabled ? $("#toggle-fullscreen").click(function () {
                $(this).find("i").toggleClass("icon-size-fullscreen icon-size-actual"), screenfull.toggle()
            }) : $("#toggle-fullscreen").addClass("hide"))
        }, this.boxFullScreen = function () {
            "undefined" != typeof screenfull && (screenfull.on("change", e => {
                var o = $(e.target);
                o.toggleClass("full"), $(o).find(".buttons-box .btn-fullscreen i").toggleClass("icon-size-fullscreen icon-size-actual")
            }), $(".btn-fullscreen").on("click", function (e) {
                e.preventDefault();
                var o = $(this).parents(".box")[0];
                screenfull.toggle(o)
            }))
        }, this.boxCollapse = function (e) {
            $(".btn-collapse").on("click", function (e) {
                e.preventDefault(), bodyClasses = ".panel-body, .portlet-body", $(this).closest(".box").find(bodyClasses).slideToggle(), $(this).find("i").toggleClass("icon-arrow-up icon-arrow-down")
            })
        }, this.boxHide = function () {
            $(".btn-close").on("click", function (e) {
                e.preventDefault(), $(this).closest(".box").animate({opacity: "0"}, 500, function () {
                    $(this).closest(".box").hide("fast")
                })
            })
        }, this.buttonsBoxCollapse = function () {
            $(".buttons-box .btn-toggle").on("click", function (e) {
                e.preventDefault(), $(this).parent().toggleClass("show")
            })
        }, this.handleSettings = function () {
            $("#toggle-setting").on("click", function (e) {
                e.preventDefault(), $(this).parent().toggleClass("active")
            }), $(".theme-colors .btn").on("click", function (o) {
                o.preventDefault();
                var t = $(this).attr("data-color");
                $("body").removeClass(function (e, o) {
                    return (o.match(/(^|\s)theme-\S+/g) || []).join(" ")
                }), $("body").addClass("theme-" + t), $(".theme-colors .btn").removeClass("active"), $(this).addClass("active"), e.Modiran.updateSettingCodes()
            }), this.updateSettingCodes = function () {
                var e, i, a = "theme-" + $(".theme-colors .btn.active").attr("data-color"), l = "";
                "undefined" != typeof Switchery && (n.checked && (e = " fix-header"), o.checked && (i = " sidebar-collapse"), t.checked || (l = " sidebar-extra"));
                var s = escapeHtml('<body class="' + a + e + i + l + '">');
                $(".theme-code code").html(s)
            }, e.Modiran.updateSettingCodes()
        }, this.handleRipple = function () {
            var e = document.querySelectorAll(".active-ripple .btn:not(.no-ripple), .active-ripple .metismenu a, .ripple-effect");
            [].forEach.call(e, function (e) {
                var o = new PaperRipple;
                e.appendChild(o.$), e.addEventListener("mousedown", function (e) {
                    o.downAction(e), o.upAction()
                })
            })
        }, this.handleSwitchery = function () {
            "undefined" != typeof Switchery && (new Switchery(n, {
                size: "small",
                color: "#999"
            }), n.onchange = function () {
                n.checked ? ($("body").addClass("fix-header"), $("#main-navbar").addClass("navbar-fixed-top")) : ($("body").removeClass("fix-header"), $("#main-navbar").removeClass("navbar-fixed-top")), e.Modiran.updateSettingCodes()
            }, new Switchery(o, {size: "small", color: "#999"}), o.onchange = function () {
                o.checked ? e.Modiran.changeSidebarState("collapse") : e.Modiran.changeSidebarState("expand")
            }, new Switchery(t, {size: "small", color: "#999"}), t.onchange = function () {
                console.log(t.checked), t.checked ? $("body").hasClass("sidebar-extra") && $("body").removeClass("sidebar-extra") : $("body").hasClass("sidebar-extra") || $("body").addClass("sidebar-extra"), e.Modiran.updateSettingCodes()
            })
        }, this.handleScrollbars = function () {
            "undefined" != typeof mCustomScrollbar && ($(".dropdown-menu.has-scrollbar").mCustomScrollbar({
                setHeight: 300,
                theme: "minimal-dark"
            }), $(".has-scrollbar").mCustomScrollbar({theme: "minimal-dark"}))
        }, this.initiSwal = function () {
            "undefined" != typeof swal && swal.setDefaults({confirmButtonText: "تائید", cancelButtonText: "لغو"})
        }, this.initiCkeck = function () {
            $("input:not(.normal)").iCheck({checkboxClass: "icheckbox_square-grey", radioClass: "iradio_square-grey"})
        }, this.handleNumericInputs = function () {
            $(document).on("input", ".numeric", function () {
                this.value = this.value.replace(/[^0-9]/g, "")
            })
        }
    }
}(window), function (e) {
    e(document).ready(function () {
        Modiran.initMetisMenu(), Modiran.checkOldIE(), Modiran.toggleSidebarTop(), Modiran.handleStatusButton(), Modiran.toggleSidebar(), Modiran.handleCodeButton(), Modiran.handleCopyCodeButton(), Modiran.tooltip(), Modiran.popover(), Modiran.dropdownHover(), Modiran.toggleFullScreen(), Modiran.boxFullScreen(), Modiran.boxCollapse(), Modiran.boxHide(), Modiran.buttonsBoxCollapse(), Modiran.handleSettings(), Modiran.handleRipple(), Modiran.handleSwitchery(), Modiran.handleScrollbars(), Modiran.initiSwal(), Modiran.initiCkeck(), Modiran.handleNumericInputs()
    }), e(window).load(function () {
        e("#loader").animate({opacity: "0"}, 10, function () {
            e("#loader").css("display", "none")
        })
    })
}(jQuery);